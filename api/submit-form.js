const nodemailer = require("nodemailer"); // Ensuite, importe Nodemailer

const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
        user: process.env.EMAIL_USER, // ‚úÖ R√©cup√®re l'email depuis Vercel
        pass: process.env.EMAIL_PASS  // ‚úÖ R√©cup√®re le mot de passe depuis Vercel
    }
});



module.exports = (req, res) => {
    if (req.method !== "POST") {
        return res.status(405).json({ error: "üö® M√©thode non autoris√©e !" });
    }

    const { nom, email, message } = req.body;

    if (!nom || !email || !message) {
        return res.status(400).json({ error: "‚ùå Tous les champs sont obligatoires !" });
    }

    console.log("‚úÖ Formulaire re√ßu :", req.body);
    console.log("üöÄ Tentative d'envoi d'email √† :", email);

    // ‚úÖ Configuration de Nodemailer
    const transporter = nodemailer.createTransport({
        service: "gmail",
        auth: {
            user: process.env.EMAIL_USER,
            pass: process.env.EMAIL_PASS
        }
    });

    const mailOptions = {
        from: process.env.EMAIL_USER,
        to: "samdepann68@gmail.com",
        replyTo: email,  // Permet de r√©pondre au client
        subject: "Confirmation de votre message",
        text: `Bonjour ${nom},\n\nMerci pour votre message : "${message}"\nNous vous r√©pondrons rapidement.\n\nCordialement,`
    };

    transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
            console.error("‚ùå Erreur d'envoi :", error);
            return res.status(500).json({ error: "√âchec d'envoi d'email.", details: error.toString() });
        } else {
            console.log("‚úÖ Email envoy√© avec succ√®s :", info.response);
            return res.json({ message: "Email bien envoy√© !" });
        }
    });
};


